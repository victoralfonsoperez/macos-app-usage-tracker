version: '3.8'

services:
  app-usage-tracker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: macos-app-usage-tracker
    restart: unless-stopped
    
    # Volume for persistent data storage
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    
    # Environment variables
    environment:
      - NODE_ENV=production
      - DATABASE_PATH=/app/data/usage_tracking.db
      - LOG_LEVEL=info
    
    # For X11 forwarding (if needed for Electron GUI)
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
    environment:
      - DISPLAY=${DISPLAY}
    
    # Network configuration
    ports:
      - "3000:3000"  # For web interface (if implemented)
    
    # Security settings
    security_opt:
      - no-new-privileges:true
    
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    
    # Health check
    healthcheck:
      test: ["CMD", "node", "--version"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Add a database backup service
  db-backup:
    image: alpine:latest
    container_name: tracker-backup
    restart: unless-stopped
    volumes:
      - ./data:/source:ro
      - ./backups:/backups
    environment:
      - BACKUP_SCHEDULE=0 2 * * *  # Daily at 2 AM
    command: |
      sh -c "
        apk add --no-cache dcron sqlite &&
        echo '0 2 * * * cp /source/usage_tracking.db /backups/usage_tracking_\$\$(date +%Y%m%d_%H%M%S).db && find /backups -name \"usage_tracking_*.db\" -mtime +7 -delete' | crontab - &&
        crond -f
      "

volumes:
  app-data:
    driver: local
  app-logs:
    driver: local
  app-backups:
    driver: local